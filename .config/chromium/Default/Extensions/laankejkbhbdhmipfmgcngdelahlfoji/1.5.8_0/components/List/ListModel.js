define(["core/Logger","core/CoreAPI"],function(t,i){return i.Class.create({descriptor:null,list:null,init:function(){var t=this.getInstanceName()||"";this.isSyncDisabled()?i.Storage.setBucket(t,"LOCAL",!0):i.Storage.setBucket(t,"SYNC",!0),this.descriptor=t.toUpperCase(),this.addListeners()},load:function(t){this.list=i.Settings.get(this.getInstanceName()),i.Object.isObjLiteral(this.list)||(this.list={}),"object"==typeof this.list[""]&&(delete this.list[""],this.save()),this.list=i.Object.sort(this.list),"function"==typeof t&&t(this.list),i.PubSub.publish(this.getClassName()+".list.loaded."+this.descriptor,{list:this.list})},save:function(t){var s=this,e={};e[this.getInstanceName()]=i.Object.sort(this.list),i.Settings.set(e,function(){"function"==typeof t&&t(s.list),i.PubSub.publish(s.getClassName()+".list.saved."+s.descriptor,{list:s.list})})},add:function(t,s,e){if(i.Utils.isEmpty(t))return!1;if(!this.list)throw new Error("["+this.getClassName()+".add()] Must load model before adding domains");return this.list[t]={},this.list=this.clean(t),s||this.save(),e||i.PubSub.publish(this.getClassName()+".domain.added."+this.descriptor,{domain:t,list:this.list}),!0},addMany:function(t){if(!i.Object.isArray(t))throw new Error("["+this.getClassName()+".addMany()] Domains must be in an array");for(var s=[],e=0;e<t.length;e++){var n=this.add(t[e],!0,!0);n&&s.push(t[e])}this.save(),i.PubSub.publish(this.getClassName()+".domains.added."+this.descriptor,{domains:s,list:this.list})},remove:function(t,s,e){return t in this.list&&(delete this.list[t],s||this.save(),e||i.PubSub.publish(this.getClassName()+".domain.removed."+this.descriptor,{domain:t,list:this.list}),!0)},removeMany:function(t){if(!i.Object.isArray(t))throw new Error("["+this.getClassName()+".removeMany()] Domains must be in an array");for(var s=[],e=0;e<t.length;e++){var n=this.remove(t[e],!0,!0);n&&s.push(t[e])}this.save(),i.PubSub.publish(this.getClassName()+".domains.removed."+this.descriptor,{domains:s,list:this.list})},get:function(t){if(t)return this.list;var i=[];for(var s in this.list)this.list.hasOwnProperty(s)&&i.push(s);return i.sort(),i},find:function(t){for(var s in this.list)if(this.list.hasOwnProperty(s)){if(i.Domain.isMoreGeneralURL(s,t))return s;if(0===s.indexOf("*")&&i.Domain.matchesWildcard(s,t))return s}return!1},has:function(t){return!(this.find(t)===!1)},clear:function(){this.list={},this.save(),i.PubSub.publish(this.getClassName()+".list.cleared."+this.descriptor,{list:this.list})},clean:function(t){var s={};for(var e in this.list)if(this.list.hasOwnProperty(e)){var n=!1;for(var a in s)s.hasOwnProperty(a)&&(e===a||i.Domain.isMoreGeneralURL(a,e))&&(n=!0);if(n===!0)continue;i.Domain.isMoreGeneralURL(t,e)?s[t]={}:i.Utils.isEmpty(e)||(s[e]={})}return s},mergeLocalWithSynced:function(t){var s=this;i.Storage.merge(this.getInstanceName(),"SYNC","LOCAL",function(){s.load(t)})},isSyncDisabled:function(){return i.Settings.get("disableSync")===!0},addListeners:function(){var t=this,s=this.getInstanceName();i.PubSub.listen("*.domain.added",function(i,s){i.matches("*.domain.added."+t.descriptor)||t.remove(s.domain)}),i.PubSub.listen("*.domains.added",function(i,s){i.matches("*.domains.added."+t.descriptor)||t.removeMany(s.domains)}),i.PubSub.listen("*.checkbox.toggle.DISABLE_SYNC",function(e,n){n.disableSync===!1?(i.Storage.setBucket(s,"SYNC"),t.mergeLocalWithSynced()):i.Storage.setBucket(s,"LOCAL")})},canRemoveSiteWhenMaxTimeAllowedExceeded:function(){return!1}})});